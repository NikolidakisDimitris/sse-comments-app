services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - data:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: rootuser
      MONGO_INITDB_ROOT_PASSWORD: rootpass
    command: mongod
    networks:
      - spring


#  mongo-express:
#    image: mongo-express
#    container_name: mongo-express
#    restart: always
#    ports:
#      - "5051:8081"
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: rootuser
#      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpass
#      ME_CONFIG_MONGODB_SERVER: mongodb
  rabbitmq:
    image: rabbitmq:3.10.6-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring
  view-app:
    build:
      context: .
      dockerfile: Dockerfile-view
    container_name: view-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - mongo
      - rabbitmq
  write-app:
    build:
      context: .
      dockerfile: Dockerfile-write
    container_name: write-app
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - rabbitmq
      - mongodb
  mongodb-app:
    build:
      context: .
      dockerfile: Dockerfile-write
    container_name: mongodb-app
    ports:
      - "9090:9090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - mongo
      - rabbitmq

volumes:
  data: {}

networks:
  spring:
    driver: bridge
#  mongodb:
#    name: mongodb_network
